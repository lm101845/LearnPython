# @Date : 2024/3/17 12:47
# @Author : liming

import re
list = re.findall("\d","我的电话号码是：10086，你的电话号码是：10010")
print(list)  # ['1', '0', '0', '8', '6', '1', '0', '0', '1', '0']
list2 = re.findall("\d","我的电话号码是：10086，你的电话号码是：10010")
print(list2)  # ['10086', '10010']

# \d是一个匹配单个数字的元字符。无论数字在字符串中的哪个位置，只要它是单个数字，\d都可以进行匹配。例如，在字符串"1"中，\d会匹配这个数字。
#
# 而\d+则表示匹配一个或多个连续的数字。它不仅仅局限于单个数字，而是会尝试匹配尽可能多的连续数字。例如，在字符串"12345"中，\d+将匹配整个字符串。
#
# 因此，\d和\d+的主要区别在于它们匹配数字的数量：前者只匹配单个数字，而后者匹配一个或多个连续的数字。

list3 = re.findall("\d*","我的电话号码是：10086，你的电话号码是：10010")
# print(list3)  # ['', '', '', '', '', '', '', '', '10086', '', '', '', '', '', '', '', '', '', '10010', '']


# finditer：返回一个迭代器，迭代器中的每一个元素都是一个match对象
it = re.finditer("\d+","我的电话号码是：10086，你的电话号码是：10010")
for match in it:
    print(match)
    print(match.group())

# search：返回一个match对象，只返回第一个匹配的内容
print("=====================================")
s = re.search("\d+","我的电话号码是：10086，你的电话号码是：10010")
print(s.group())
# 10086  懒惰匹配

print("=====================================")

# match：从头开始匹配，如果开头没有则返回None
# s2 = re.match("\d+","我的电话号码是：10086，你的电话号码是：10010")
# print(s2.group())